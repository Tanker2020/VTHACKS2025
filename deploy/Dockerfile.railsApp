# ========= Rails (Ruby 3.4) =========
# Multi-stage: build gems/assets, then copy into a tiny runtime image.

ARG RUBY_VERSION=3.4
ARG DEBIAN_FRONTEND=noninteractive

# ---- Build stage ----
FROM ruby:${RUBY_VERSION}-slim AS build

# System deps needed to compile native gems (pg, nokogiri, etc.)
RUN apt-get update && apt-get install -y --no-install-recommends \
      build-essential git curl pkg-config libpq-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install gems using the lockfile (production-only for smaller image)
# TIP: ensure your Gemfile.lock includes linux platform: `bundle lock --add-platform aarch64-linux`
COPY railsApp/Gemfile railsApp/Gemfile.lock ./
RUN bundle config set deployment 'true' \
 && bundle config set without 'development test' \
 && bundle install --jobs=4

# Copy the app
COPY railsApp/ ./

# Precompile assets if you have any (safe to ignore if none)
ENV RAILS_ENV=production
RUN bundle exec rake assets:precompile || true

# ---- Runtime stage ----
FROM ruby:${RUBY_VERSION}-slim

# Only runtime libs (no compiler)
RUN apt-get update && apt-get install -y --no-install-recommends \
      libpq5 curl \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY --from=build /app /app

# Optional: drop privileges
RUN useradd -m app && chown -R app:app /app
USER app

# Rails runtime env
ENV RAILS_ENV=production \
    RACK_ENV=production \
    BUNDLE_DEPLOYMENT=1

# Puma on 3000 (make sure you have config/puma.rb)
EXPOSE 3000
HEALTHCHECK --interval=30s --timeout=5s --retries=5 \
  CMD curl -fsS http://localhost:3000/health || exit 1

# NOTE:
# - Provide RAILS_MASTER_KEY, DATABASE_URL, REDIS_URL via env/.env file (not baked into image)
CMD ["bundle", "exec", "puma", "-C", "config/puma.rb"]